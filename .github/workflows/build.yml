name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: ap-southeast-1
  ECR_REPO_NAME: ${{ secrets.ECR_REPOSITORY_URL }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  IMAGE_NAME: ${{ secrets.ECR_REPOSITORY_URL }}:${{ github.sha }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check and build
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci

      - name: Create env file
        run: |
          touch .env
          echo REACT_APP_COGNITO_LOGIN_URL=${{ secrets.COGNITO_LOGIN_URL }} >> .env
          echo REACT_APP_COGNITO_LOGIN_REDIRECT_URL=${{ secrets.COGNITO_LOGIN_REDIRECT_URL }} >> .env
          echo REACT_APP_COGNITO_AUTH_TOKEN_URL=${{ secrets.COGNITO_AUTH_TOKEN_URL }} >> .env
          echo REACT_APP_COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }} >> .env
          echo REACT_APP_COGNITO_CLIENT_SECRET=${{ secrets.COGNITO_CLIENT_SECRET }} >> .env
          cat .env

      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test && npm run test -- --coverage --watchAll=false

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm run build
        env:
          REACT_APP_COGNITO_AUTH_TOKEN_URL: 'test'
          REACT_APP_COGNITO_CLIENT_ID: 'test'
          REACT_APP_COGNITO_CLIENT_SECRET: 'test'

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: build

  audit_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - run: npm ci
      - run: npm run audit
        continue-on-error: true

  deploy_to_s3:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Create env file
        run: |
          touch .env
          echo REACT_APP_COGNITO_LOGIN_URL=${{ secrets.COGNITO_LOGIN_URL }} >> .env
          echo REACT_APP_COGNITO_LOGIN_REDIRECT_URL=${{ secrets.COGNITO_LOGIN_REDIRECT_URL }} >> .env
          echo REACT_APP_COGNITO_AUTH_TOKEN_URL=${{ secrets.COGNITO_AUTH_TOKEN_URL }} >> .env
          echo REACT_APP_COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }} >> .env
          echo REACT_APP_COGNITO_CLIENT_SECRET=${{ secrets.COGNITO_CLIENT_SECRET }} >> .env
          cat .env

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Delete S3 contents before deploy
        run: |
          aws s3 rm s3://shiok-jobs-client-bucket --recursive  

      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://shiok-jobs-client-bucket --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
